@model CheckOutVM

	<!-- Start Page Title Area -->
		<div class="page-title-area">
			<div class="container">
				<div class="page-title-content">
					<h2>Checkout</h2>
					<ul>
						<li>
							<a href="index.html">
								Home 
							</a>
						</li>
						<li>Checkout</li>
					</ul>
				</div>
			</div>
		</div>
		<!-- End Page Title Area -->

		<!-- Start Checkout Area -->
		<section class="checkout-area ptb-100">
			<div class="container">
				<div class="row">
					<div class="col-lg-12 col-md-12">
						<div class="user-actions">
							<i class='bx bx-log-in-circle'></i>
							<span>Returning customer? <a href="log-in.html">Click here to login</a></span>
						</div>
					</div>
				</div>

				<form method="post" asp-action="CheckOut" class="needs-validation" id="checkoutForm" novalidate>
					<div class="row">
						<div class="col-lg-6 col-md-12">
							<div class="billing-details">
								<h3 class="title">Billing Details</h3>

								<div class="row">
									<input type="hidden" asp-for="CustomerID" />
									<div class="col-lg-6 col-md-6">
										<div class="form-group">
											<label>First Name <span class="required">*</span></label>
											<input type="text" asp-for="CustomerFirstName" class="form-control" required>
										</div>
									</div>
										<div class="col-lg-6 col-md-6">
										<div class="form-group">
											<label>Last Name <span class="required">*</span></label>
											<input type="text" asp-for="CustomerLastName" class="form-control" required>
										</div>
									</div>
									<div class="col-lg-12 col-md-6">
										<div class="form-group">
											<label>Address <span class="required">*</span></label>
											<input type="text" asp-for="CustomerAddress" class="form-control" required>
										</div>
									</div>

									<div class="col-lg-6 col-md-6">
										<div class="form-group">
											<label>Email Address <span class="required">*</span></label>
											<input type="email" asp-for="CustomerEmail" class="form-control" required>
										</div>
									</div>

									<div class="col-lg-6 col-md-6">
										<div class="form-group">
											<label>Phone <span class="required">*</span></label>
											<input type="text" asp-for="CustomerPhone" class="form-control" required>
										</div>
									</div>
								</div>
							</div>
						</div>

						<div class="col-lg-6 col-md-12">
							<div class="order-details">
								<div class="order-table table-responsive">
									<h3 class="title">Your Order</h3>
									<table class="table table-bordered">
										<thead>
											<tr>
												<th scope="col">Product Name</th>
												<th scope="col">Total</th>
											</tr>
										</thead>

										<tbody>
										
													@{
										              decimal subPrice = 0;
									                }
											@foreach (var item in Model.Products)
											{
										        var Quantity=Model.ProductIds.Where(x=>x == item.ID).Count();
										         subPrice = item.Price * Quantity;
											<tr>
												<td class="product-name">
													<a href="#">@item.Name</a>
												</td>

												<td class="product-total">
													<a class="subtotal-amount">@subPrice</a>
												</td>
												
											</tr>	
											}
										</tbody>
									</table>
								</div>

								<div class="payment-box btn">
										<button type="submit" class="btn btn-warning" style="color:white">Place Order</button>
										<i class="flaticon-right" style="color:white"></i>
								</div>
							</div>
						</div>
					</div>
				</form>
			</div>
		</section>


		@section Scripts{
			<script>
// Example starter JavaScript for disabling form submissions if there are invalid fields
(function() {
  'use strict';
  $("#checkoutForm").submit(function(e){
	  e.preventDefault()
	  $.ajax({
		  url:"/Orders/CheckOut",
		  method:"Post",
		  data:$("#checkoutForm").serialize(),
		  success:function(){
			  Swal.fire(
                'Good job!',
                'You clicked the button!',
                 'success'
			  );
			  setTimeout(()=>window.location.href="/home",2000);
		  }

	  })
  })
//  window.addEventListener('load', function() {
//    // Fetch all the forms we want to apply custom Bootstrap validation styles to
//    var forms = document.getElementsByClassName('needs-validation');
//    // Loop over them and prevent submission
//    var validation = Array.prototype.filter.call(forms, function(form) {
//      form.addEventListener('submit', function(event) {
//        if (form.checkValidity() === false) {
//          event.preventDefault();
//          event.stopPropagation();
//        }
//        form.classList.add('was-validated');
//      }, false);
//    });
//  }, false);
//})();
//</script>
		}
		<!-- End Checkout Area -->

